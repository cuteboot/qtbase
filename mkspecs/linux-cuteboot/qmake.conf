#
# qmake configuration for building with arm-linux-gnueabi-g++
#

load(device_config)

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental 
# unversioned_soname, unversioned_libname ?
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)
QMAKE_COMPILER          = gcc

# modifications to g++.conf
QMAKE_CC                = $${CROSS_COMPILE}gcc
QMAKE_CXX               = $${CROSS_COMPILE}g++
QMAKE_LINK              = $${CROSS_COMPILE}g++
QMAKE_LINK_SHLIB        = $${CROSS_COMPILE}g++
QMAKE_LFLAGS_APP        += -pie

QMAKE_CXXFLAGS = $${CUTEBOOT_CFLAGS} 
QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO = $${CUTEBOOT_CFLAGS} -g -fomit-frame-pointer -fno-strict-aliasing -finline-limit=64
QMAKE_CXXFLAGS_RELEASE = $${CUTEBOOT_CFLAGS} -fomit-frame-pointer -fno-strict-aliasing -finline-limit=64
QMAKE_CXXFLAGS_DEBUG = $${CUTEBOOT_CFLAGS} -g

QMAKE_CFLAGS = $$QMAKE_CXXFLAGS
QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO = $$QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO
QMAKE_CFLAGS_RELEASE = $$QMAKE_CXXFLAGS_RELEASE
QMAKE_CFLAGS_DEBUG = $$QMAKE_CXXFLAGS_DEBUG

# modifications to linux.conf
INCLUDEPATH             += $$[QT_SYSROOT]/usr/include/gnu-libstdc++/include
INCLUDEPATH             += $$[QT_SYSROOT]/usr/include/gnu-libstdc++/libs
INCLUDEPATH             += $$[QT_SYSROOT]/aosp/include
QMAKE_LIBS              = -L$$[QT_SYSROOT]/aosp/lib -L$$[QT_SYSROOT]/usr/lib/gnu-libstdc++ -lstdc++ -lgnustl_shared
DEFINES                += ANDROID Q_OS_ANDROID_NO_SDK
CONFIG                 += android android-no-sdk
# Android NDK uses -fno-rtti by default
CONFIG		       -= rtti
DEFINES			+= QT_NO_DYNAMIC_CAST

QMAKE_LIBS_THREAD       =
QMAKE_LIBS_CORE         = -llog

QMAKE_AR                = $${CROSS_COMPILE}ar Dcqs
QMAKE_OBJCOPY           = $${CROSS_COMPILE}objcopy
QMAKE_NM                = $${CROSS_COMPILE}nm -P
QMAKE_STRIP             = $${CROSS_COMPILE}strip

load(qt_config)
